
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: root
    password: 1234

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id:
            client-secret:
            scope:
              - email
              - profile

#          facebook: # /oauth2/authorization/facebook 이 주소를 동작하게 한다.
#            client-id:
#            client-secret:
#            scope:
#              - email
#              - public_profile
#
#          # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
#          # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
#          naver: # /oauth2/authorization/naver 이 주소를 동작하게 한다.
#            client-id:
#            client-secret:
#            scope:
#              - name
#              - email
#            client-name: Naver # 클라이언트 이름은 구글, 페이스북도 대문자로 시작
#            authorization-grant-type: authorization_code
#            redirect-uri: http://localhost:8080/login/oauth2/code/naver
#
#        provider:
#          naver:
#            authorization-uri: https://nid.naver.com/oauth2.0/authorize
#            token-uri: https://nid.naver.com/oauth2.0/token
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user-name-attribute: response # 회원정보를 json으로 받는데 response라는 키 값으로 네이버가 리턴해줌